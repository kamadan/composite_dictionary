var 文件夹 = './';
var 读写器 = require('fs');
  
读写器.readdirSync(文件夹).forEach(原文 => {
    if (原文.endsWith(".txt")){
         
          var 整列内容 = JSON.parse(读写器.readFileSync(原文, 'utf8'))["資料表1"]
         
          整列内容.forEach(字词 =>{              
              百科页内容 = 页面生成(字词)
              if (读写器.existsSync(字词["字詞名"]+".wiki")) {
                var 旧内容 = 读写器.readFileSync(字词["字詞名"]+".wiki", 'utf8')
                百科页内容 = 新旧结合(旧内容, 百科页内容) //如果不同文件的所有栏目都不同名，则无需通融。但不知是否不同文件的所有栏目都该不同命
              }                                       
              读写器.writeFileSync(字词["字詞名"]+".wiki", 百科页内容)    
          })          
          
    }  
});

function 新旧结合(旧内容, 新内容){
    
    //未写好;//如果不同文件的所有栏目都不同名，则无需通融。但不知是否不同文件的所有栏目都该不同命
    //暂不改已有文件的内容
    var 结合 = ""
    结合 = 旧内容
    
    return 结合
}

function 页面生成(数据){
    
  /* Excel 内各栏
  
    "字詞號"
    "页面名"    "字詞名"
    "字词分类"   "字詞屬性"         
    "字根一"    "部首字"                             
    "注音"  "注音一式"
    "拼音"  "漢語拼音"
    "相似詞"
    "相反詞"
    "釋義"
    "編按"
    "多音參見訊息"
    "異體字"                    
  */
  
  var 结果 = "{{#invoke:页面参数|canshu\n"+
            "|页面名 = " + "{{FULLPAGENAME}}" + "\n" + //
            "|字詞號 = " + (数据.hasOwnProperty("字詞號") ? 字条化(数据["字詞號"]) : '') + "\n" +
            "|字詞分類 = " + (数据.hasOwnProperty("字詞屬性") ? (数据["字詞屬性"]==="1" ? '字' : '詞') : '字')+ "\n" +
            "|簡介 = " + (数据.hasOwnProperty("簡介") ? 字条化(数据["簡介"]) : '') + "\n" +
            "|解說 = " + (数据.hasOwnProperty("解說") ? 字条化(数据["解說"]) : '') + "\n" +            
            "|倉頡 = " + (数据.hasOwnProperty("倉頡") ? 字条化(数据["倉頡"]) : '') + "\n" +
            "|注音 = " + (数据.hasOwnProperty("注音") ? 字条化(数据["注音"]) : (数据.hasOwnProperty("注音一式") ? 字条化(数据["注音一式"]) : '')) + "\n" +
            "|拼音 = " + (数据.hasOwnProperty("拼音") ? 字条化(数据["拼音"]) : (数据.hasOwnProperty("漢語拼音") ? 字条化(数据["漢語拼音"]) : '')) + "\n" +
            "|字根一 = " + (数据.hasOwnProperty("字首") ? 字条化(数据["字首"]) : (数据.hasOwnProperty("字根一") ? 字条化(数据["字根一"]) : (数据.hasOwnProperty("部首字") ? 字条化(数据["部首字"]) : ''))) + "\n" + 
            "|字根二 = " + (数据.hasOwnProperty("字身") ? 字条化(数据["字身"]) : (数据.hasOwnProperty("字根二") ? 字条化(数据["字根二"]) : '')) + "\n" +            
            "|字根三 = " + (数据.hasOwnProperty("字根三") ? 字条化(数据["字根三"]) : '') + "\n" +
            "|字根四 = " + (数据.hasOwnProperty("字根四") ? 字条化(数据["字根四"]) : '') + "\n" +
            "|字源 = " + (数据.hasOwnProperty("字源") ? 字条化(数据["字源"]) : '') + "\n" +
            "|字意 = " + (数据.hasOwnProperty("字意") ? 字条化(数据["字意"]) : '') + "\n" +
            "|音聯字 = " + (数据.hasOwnProperty("音聯字") ? 字条化(数据["音聯字"]) : '') + "\n" + //
            "|意聯字 = " + (数据.hasOwnProperty("意聯字") ? 字条化(数据["意聯字"]) : '') + "\n" +
            "|相似詞 = " + (数据.hasOwnProperty("相似詞") ? 字条化(数据["相似詞"]) : '') + "\n" +
            "|相反詞 = " + (数据.hasOwnProperty("相反詞") ? 字条化(数据["相反詞"]) : '') + "\n" +
            "|萌典釋義 = " + (数据.hasOwnProperty("釋義") ? 字条化(数据["釋義"]) : '') + "\n" + //
            "|編按 = " + (数据.hasOwnProperty("編按") ? 字条化(数据["編按"]) : '') + "\n" +
            "|多音參見訊息 = " + (数据.hasOwnProperty("多音參見訊息") ? 字条化(数据["多音參見訊息"]) : '') + "\n" +
            "|異體字 = " + ((数据.hasOwnProperty("異體字") && 数据["異體字"] !== "0") ? 字条化(数据["異體字"]) : '') + "\n" +
            "|體 = " + (数据.hasOwnProperty("體") ? 字条化(数据["體"]) : '') + "\n" +
            "|用 = " + (数据.hasOwnProperty("用") ? 字条化(数据["用"]) : '') + "\n" +
            "|因 = " + (数据.hasOwnProperty("因") ? 字条化(数据["因"]) : '') + "\n" +
            "|果 = " + (数据.hasOwnProperty("果") ? 字条化(数据["果"]) : '') + "\n" +
            "|組合字 = " + (数据.hasOwnProperty("組合字") ? 字条化(数据["組合字"]) : '') + "\n" +
            "|說文解字字義 = " + (数据.hasOwnProperty("說文解字字義") ? 字条化(数据["說文解字字義"]) : '') + "\n" +
            "|康熙字典字義 = " + (数据.hasOwnProperty("康熙字典字義") ? 字条化(数据["康熙字典字義"]) : '') + "\n" +
            "|其他等字典字義 = " + (数据.hasOwnProperty("其他等字典字義") ? 字条化(数据["其他等字典字義"]) : '') + "\n" +
            "|詞組 = " + (数据.hasOwnProperty("詞組") ? 字条化(数据["詞組"]) : '') + "\n" +
            "|成語 = " + (数据.hasOwnProperty("成語") ? 字条化(数据["成語"]) : '') + "\n}}" 
            
    return 结果 
}

function 字条化(数据字条){
    var 替换引号括号=/[\{\}\[\]\"]/gi; //不包括 ()
    var 逗号后加换行=/,/gi;
    
    return 数据字条.replace(替换引号括号, "").replace(逗号后加换行, ",\r\n")
}

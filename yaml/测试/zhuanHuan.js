var 文件夹 = './';
var 读写器 = require('fs');
var yaml翻译器 = require('js-yaml')

var 未见过的栏目 = []
  
读写器.readdirSync(文件夹).forEach(原文 => {
    if (原文.endsWith(".yaml")){
         
          var 转换结果 = yaml翻译器.safeLoad(读写器.readFileSync(原文, 'utf8'), {json:true})          
          
          逐字存档(转换结果)
          
    }  
});

console.log([...new Set(未见过的栏目)])

function 逐字存档(源体) {  
  for (var 字 in 源体) {
    if( 源体.hasOwnProperty(字) ) {
        读写器.writeFileSync(字+".wiki", 页面生成(源体[字]))
    } 
  }              
}

function 页面生成(数据){

  var 结果 = "{{#invoke:页面参数|canshu\n"+
            "|页面名 = " + "{{FULLPAGENAME}}" + "\n" + //
            "|字詞號 = " + (数据.hasOwnProperty("字詞號") ? 字条化(数据["字詞號"]) : '') + "\n" +
            "|字詞分類 = " + (数据.hasOwnProperty("字詞屬性") ? (数据["字詞屬性"]==="1" ? '字' : '詞') : '字')+ "\n" +
            "|簡介 = " + (数据.hasOwnProperty("簡介") ? 字条化(数据["簡介"]) : '') + "\n" +
            "|解說 = " + (数据.hasOwnProperty("解說") ? 字条化(数据["解說"]) : '') + "\n" +            
            "|倉頡 = " + (数据.hasOwnProperty("倉頡") ? 字条化(数据["倉頡"]) : '') + "\n" +
            "|注音 = " + (数据.hasOwnProperty("注音") ? 字条化(数据["注音"]) : (数据.hasOwnProperty("注音一式") ? 字条化(数据["注音一式"]) : '')) + "\n" +
            "|拼音 = " + (数据.hasOwnProperty("拼音") ? 字条化(数据["拼音"]) : (数据.hasOwnProperty("漢語拼音") ? 字条化(数据["漢語拼音"]) : '')) + "\n" +
            "|字根一 = " + (数据.hasOwnProperty("字首") ? 字条化(数据["字首"]) : (数据.hasOwnProperty("字根一") ? 字条化(数据["字根一"]) : (数据.hasOwnProperty("部首字") ? 字条化(数据["部首字"]) : ''))) + "\n" + 
            "|字根二 = " + (数据.hasOwnProperty("字身") ? 字条化(数据["字身"]) : (数据.hasOwnProperty("字根二") ? 字条化(数据["字根二"]) : '')) + "\n" +            
            "|字根三 = " + (数据.hasOwnProperty("字根三") ? 字条化(数据["字根三"]) : '') + "\n" +
            "|字根四 = " + (数据.hasOwnProperty("字根四") ? 字条化(数据["字根四"]) : '') + "\n" +
            "|字源 = " + (数据.hasOwnProperty("字源") ? 字条化(数据["字源"]) : '') + "\n" +
            "|字意 = " + (数据.hasOwnProperty("字意") ? 字条化(数据["字意"]) : '') + "\n" +
            "|音聯字 = " + (数据.hasOwnProperty("音聯字") ? 字条化(数据["音聯字"]) : '') + "\n" + //
            "|意聯字 = " + (数据.hasOwnProperty("意聯字") ? 字条化(数据["意聯字"]) : '') + "\n" +
            "|相似詞 = " + (数据.hasOwnProperty("相似詞") ? 字条化(数据["相似詞"]) : '') + "\n" +
            "|相反詞 = " + (数据.hasOwnProperty("相反詞") ? 字条化(数据["相反詞"]) : '') + "\n" +
            "|萌典釋義 = " + (数据.hasOwnProperty("釋義") ? 字条化(数据["釋義"]) : '') + "\n" + //
            "|編按 = " + (数据.hasOwnProperty("編按") ? 字条化(数据["編按"]) : '') + "\n" +
            "|多音參見訊息 = " + (数据.hasOwnProperty("多音參見訊息") ? 字条化(数据["多音參見訊息"]) : '') + "\n" +
            "|異體字 = " + ((数据.hasOwnProperty("異體字") && 数据["異體字"] !== "0") ? 字条化(数据["異體字"]) : '') + "\n" +
            "|體 = " + (数据.hasOwnProperty("體") ? 字条化(数据["體"]) : '') + "\n" +
            "|用 = " + (数据.hasOwnProperty("用") ? 字条化(数据["用"]) : '') + "\n" +
            "|因 = " + (数据.hasOwnProperty("因") ? 字条化(数据["因"]) : '') + "\n" +
            "|果 = " + (数据.hasOwnProperty("果") ? 字条化(数据["果"]) : '') + "\n" +
            "|組合字 = " + (数据.hasOwnProperty("組合字") ? 字条化(数据["組合字"]) : '') + "\n" +
            "|說文解字字義 = " + (数据.hasOwnProperty("說文解字字義") ? 字条化(数据["說文解字字義"]) : '') + "\n" +
            "|康熙字典字義 = " + (数据.hasOwnProperty("康熙字典字義") ? 字条化(数据["康熙字典字義"]) : '') + "\n" +
            "|其他等字典字義 = " + (数据.hasOwnProperty("其他等字典字義") ? 字条化(数据["其他等字典字義"]) : '') + "\n" +
            "|詞組 = " + (数据.hasOwnProperty("詞組") ? 字条化(数据["詞組"]) : '') + "\n" +
            "|成語 = " + (数据.hasOwnProperty("成語") ? 字条化(数据["成語"]) : '') + "\n}}"             
    
    for (var 栏 in 数据) {
      if( 数据.hasOwnProperty(栏) ) {
          switch (栏) {
              case "页面名":case "字詞分類":case "簡介":case "解說":case "倉頡":case "注音":case "拼音":case "字首":case "字身":case "字根一":case "字根二":case "字根三":case "字根四":case "字源":case "字意":case "音聯字":case "意聯字":case "體":case "用":case "因":case "果":case "組合字":case "說文解字字義":case "康熙字典字義":case "其他等字典字義":case "詞組":case "成語":case "相似詞":case "相反詞":case "釋義":case "編按":case "多音參見訊息":case "異體字":case "字詞號":
                break;              
              default:
                结果 += "|" + 栏 + " = " + 字条化(数据[栏]) + "\n"
                未见过的栏目.push(栏)                
          }
      } 
    }
    //当“结果”被视为一行字时，“结果”内的\r\n不会被视为换行，只会被视为同行内的内容。 因此，唯有在下方加上 m 选项后，
    //^ $ 等符号才会分别对上以\r\n为分割线的各行的起点和终点。否则，^ $ 只会对上整个结果的起点和终点。
    //var 给多例中的最后一例加逗号 = /^([^\|]+)$/gmi;
    //结果 = 结果.replace(给多例中的最后一例加逗号, "$1,")
    return 结果 + "}}"
}

function 字条化(数体){
    var 替换引号括号=/[\{\}\[\]\"]/gi; //不包括 ()
    var 逗号后加换行=/,/gi;
    
    return JSON.stringify(数体).replace(替换引号括号, "").replace(逗号后加换行, ",\r\n").replace("null", "")
}

//草稿
//var 存档名 = 原文.replace(".yaml", ".json");
//读写器.writeFileSync(存档名, JSON.stringify(转换结果, null, 2)); 
//JSON.stringify(源体[字], null, 2)
//结果 += (发现新栏目 ? "}}\n[[分类:含未归类的新栏目]]" : "}}")
/*

  
  var 结果 = "{{#invoke:页面参数|canshu\n"+
            "|页面名 = " + "{{FULLPAGENAME}}" + "\n" + //
            "|字词分类 = " + "字" + "\n" + //            
            "|簡介 = " + (数据.hasOwnProperty("簡介") ? 字条化(数据["簡介"]) : '') + "\n" +
            "|解說 = " + (数据.hasOwnProperty("解說") ? 字条化(数据["解說"]) : '') + "\n" +
            "|倉頡 = " + (数据.hasOwnProperty("倉頡") ? 字条化(数据["倉頡"]) : '') + "\n" +
            "|注音 = " + (数据.hasOwnProperty("注音") ? 字条化(数据["注音"]) : '') + "\n" +
            "|拼音 = " + (数据.hasOwnProperty("拼音") ? 字条化(数据["拼音"]) : '') + "\n" +
            "|字根一 = " + (数据.hasOwnProperty("字首") ? 字条化(数据["字首"]) : '') + "\n" + //源文件里本无: 字根一，二，三，或四
            "|字根二 = " + (数据.hasOwnProperty("字身") ? 字条化(数据["字身"]) : '') + "\n" +
            //"|字根一 = " + (数据.hasOwnProperty("字根一") ? 字条化(数据["字根一"]) : '') + "\n" + //万一源文件里有 字根一，字根二，那么，或需想办法用 字首，字根 对其分别覆盖
            //"|字根二 = " + (数据.hasOwnProperty("字根二") ? 字条化(数据["字根二"]) : '') + "\n" +
            "|字根三 = " + (数据.hasOwnProperty("字根三") ? 字条化(数据["字根三"]) : '') + "\n" +
            "|字根四 = " + (数据.hasOwnProperty("字根四") ? 字条化(数据["字根四"]) : '') + "\n" +
            "|字源 = " + (数据.hasOwnProperty("字源") ? 字条化(数据["字源"]) : '') + "\n" +
            "|字意 = " + (数据.hasOwnProperty("字意") ? 字条化(数据["字意"]) : '') + "\n" +
            "|音聯字 = " + (数据.hasOwnProperty("音聯字") ? 字条化(数据["音聯字"]) : '') + "\n" + //
            "|意聯字 = " + (数据.hasOwnProperty("意聯字") ? 字条化(数据["意聯字"]) : '') + "\n" +
            "|體 = " + (数据.hasOwnProperty("體") ? 字条化(数据["體"]) : '') + "\n" +
            "|用 = " + (数据.hasOwnProperty("用") ? 字条化(数据["用"]) : '') + "\n" +
            "|因 = " + (数据.hasOwnProperty("因") ? 字条化(数据["因"]) : '') + "\n" +
            "|果 = " + (数据.hasOwnProperty("果") ? 字条化(数据["果"]) : '') + "\n" +
            "|組合字 = " + (数据.hasOwnProperty("組合字") ? 字条化(数据["組合字"]) : '') + "\n" +
            "|說文解字字義 = " + (数据.hasOwnProperty("說文解字字義") ? 字条化(数据["說文解字字義"]) : '') + "\n" +
            "|康熙字典字義 = " + (数据.hasOwnProperty("康熙字典字義") ? 字条化(数据["康熙字典字義"]) : '') + "\n" +
            "|其他等字典字義 = " + (数据.hasOwnProperty("其他等字典字義") ? 字条化(数据["其他等字典字義"]) : '') + "\n" +
            "|詞組 = " + (数据.hasOwnProperty("詞組") ? 字条化(数据["詞組"]) : '') + "\n" +
            "|成語 = " + (数据.hasOwnProperty("成語") ? 字条化(数据["成語"]) : '') + "\n" 
*/